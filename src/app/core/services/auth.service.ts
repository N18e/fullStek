import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable, tap } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class AuthService {
  private apiUrl = '/api/auth'; // –±–µ–∑ localhost:8082

  constructor(private http: HttpClient) {}

  // üîê –õ–æ–≥—ñ–Ω –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è email
  login(data: { email: string; password: string }): Observable<any> {
    return this.http.post(`${this.apiUrl}/login`, {
      userEmail: data.email,
      password: data.password
    }, this.getJsonHeaders()).pipe(
      tap((response: any) => {
        if (response.emailConfirmed) {
          localStorage.setItem('token', response.token);
        } else {
          throw new Error('EMAIL_NOT_CONFIRMED');
        }
      })
    );
  }

  // üìù –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  register(data: { email: string; password: string; name?: string }): Observable<any> {
    return this.http.post(`${this.apiUrl}/register`, {
      userEmail: data.email,
      password: data.password,
      name: data.name
    }, this.getJsonHeaders());
  }

  // üì© –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è email
  confirmEmail(token: string): Observable<any> {
    return this.http.post(`${this.apiUrl}/confirm-email?token=${token}`, {}, this.getJsonHeaders());
  }

  // üîÅ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è (–µ—Ç–∞–ø 1) ‚Äî –∑–∞–ø–∏—Ç –Ω–∞ reset-password-token
// üîÅ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è (–µ—Ç–∞–ø 1)
  forgotPassword(email: string): Observable<any> {
    return this.http.post(
      `${this.apiUrl}/reset-password-token?email=${encodeURIComponent(email)}`,
      {},
      this.getJsonHeaders()
    );
  }



  // ‚úÖ –°–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è (–µ—Ç–∞–ø 2)
  resetPassword(token: string, newPassword: string): Observable<any> {
    return this.http.post(`${this.apiUrl}/reset-password?token=${token}`, {
      newPassword
    }, this.getJsonHeaders());
  }

  // üì• –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω –∑ localStorage
  getToken(): string | null {
    return localStorage.getItem('token');
  }

  // ‚ùå –í–∏–π—Ç–∏ –∑ —Å–∏—Å—Ç–µ–º–∏
  logout(): void {
    localStorage.removeItem('token');
  }

  // ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: —á–∏ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
  isLoggedIn(): boolean {
    return !!this.getToken();
  }

  // üß± –ó–∞–≥–æ–ª–æ–≤–∫–∏
  private getJsonHeaders() {
    return {
      headers: new HttpHeaders({
        'Content-Type': 'application/json'
      })
    };
  }
}
